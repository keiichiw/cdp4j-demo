package com.example.app;

import io.webfolder.cdp.Launcher;
import io.webfolder.cdp.event.network.ResponseReceived;
import io.webfolder.cdp.session.Session;
import io.webfolder.cdp.session.SessionFactory;
import io.webfolder.cdp.type.network.ResourceTiming;
import io.webfolder.cdp.type.network.Response;
import org.codelibs.fess.crawler.entity.RequestData;
import org.codelibs.fess.crawler.entity.ResponseData;

import java.io.IOException;

import static io.webfolder.cdp.event.Events.NetworkResponseReceived;
import static io.webfolder.cdp.type.page.ResourceType.Document;
import static io.webfolder.cdp.type.page.ResourceType.XHR;
import static java.util.Arrays.asList;

public class App {

    public static ResponseData execute(RequestData request) {
        ResponseData responseData = new ResponseData();
        Launcher launcher = new Launcher();

        try (SessionFactory factory = launcher.launch(asList("--headless", "--disable-gpu"));
             Session session = factory.create()) {
            session.getCommand().getNetwork().enable();

            session.addEventListener((e, d) -> {
                if (NetworkResponseReceived.equals(e)) {
                    final ResponseReceived rr = (ResponseReceived) d;

                    if (Document.equals(rr.getType()) || XHR.equals(rr.getType())) {
                        final Response response = rr.getResponse();
                        final int status = response.getStatus().intValue();
                        final String mimeType = response.getMimeType();
                        final ResourceTiming timing = response.getTiming();

                        responseData.setUrl(request.getUrl());
                        responseData.setMethod(request.getMethod().name());
                        responseData.setHttpStatusCode(status);
                        responseData.setMimeType(mimeType);
                        responseData.setExecutionTime(timing.getRequestTime().longValue());
                    }
                }
            });
            session.navigate(request.getUrl());
            session.waitDocumentReady();

            // Sync
            session.waitUntil(s -> responseData.getUrl() != null, 1000);

            String content = (String) session.getProperty("//body", "outerText");
            responseData.setResponseBody(content.getBytes());
            responseData.setContentLength(content.length());
            session.close();
        }
        return responseData;
    }

    public static void main(String[] args) throws IOException {
        final RequestData request = new RequestData();
        request.setUrl("https://time.is"); // page generated by JavaScript
        request.setMethod(RequestData.Method.GET);

        // Get response
        ResponseData responseData = execute(request);

        // Print
        System.out.println("URL: " + responseData.getUrl());
        System.out.println("Status: " + responseData.getHttpStatusCode());
        System.out.println("Mime: " + responseData.getMimeType());
        System.out.println("Length: " + responseData.getContentLength());
        System.out.println("Time: " + responseData.getExecutionTime());
        byte b[] = new byte[1024];
        responseData.getResponseBody().read(b);
        System.out.println("Body: " + new String(b) + "...");
    }
}
